//---------------------------------------------------------------------------


#pragma hdrstop

#include "KeyenceIL030.h"
#include "GlobalFunction.h"
#include "stdio.h"

//---------------------------------------------------------------------------

#pragma package(smart_init)

CKeyenceIL030 g_IL030SerialUp(9);
CKeyenceIL030 g_IL030SerialDown(8);
//---------------------------------------------------------------------------
__fastcall CKeyenceIL030::CKeyenceIL030(int nPort)
{
        m_bInitOK=OpenPort(nPort);

        m_dX[0]=0.0;
        m_dX[1]=0.0;
        m_dY[0]=0.0;
        m_dY[1]=0.0;
}
//---------------------------------------------------------------------------
__fastcall CKeyenceIL030::~CKeyenceIL030()
{

}
//---------------------------------------------------------------------------
bool __fastcall CKeyenceIL030::OpenPort(int nPort)
{
        return Open(nPort,B9600,BIT_8|STOP_1|P_NONE);
}
//---------------------------------------------------------------------------
double __fastcall CKeyenceIL030::GetLaserValue()
{
        double dResultValue = 999.999;
        if(!m_bInitOK) return dResultValue;


        AnsiString strSend = "SR,00,038\r\n";
        WriteData(strSend.c_str());
        char strReceive[100]={0};

        if(ReadData(strReceive,'\n'))
        {
            AnsiString strResult = strReceive;
            TStringList *StrList = SplitString(strResult, ",");
            AnsiString strValue = StrList->Strings[3];
            ReplaceString(&strValue, "\r\n", "");
            dResultValue = strValue.ToDouble();
            delete StrList;

            return dResultValue;
        }
        else return dResultValue;
}
//---------------------------------------------------------------------------
int __fastcall CKeyenceIL030::GetData(int nID)
{
         if(!m_bInitOK) return -1;

        char strSend[100]={0};//="$DA01?\x0d";		//DEFAULT ID 01
        sprintf(strSend,"$DA%02d?\x0d",nID);

        WriteData(strSend);
        char strReceive[100]={0};
        char strValue[15]={0};
        if(ReadData(strReceive,'\x0d'))
        {
                if(strReceive[0]!= '$') return -999;
                strncpy(strValue,strReceive+4,7);
                if(strReceive[3]== '-')
                        return -atoi(strValue);
                else return atoi(strValue);
        }
        else return -1;

}
//---------------------------------------------------------------------------
bool __fastcall CKeyenceIL030::EnableZero(int nID)
{
        if(!m_bInitOK) return false;
        
        char strSend[100]={0};
        sprintf(strSend,"$ZE%02d\x0d",nID);

        WriteData(strSend);
        char strReceive[100]={0};
        char strValue[15]={0};
        if(ReadData(strReceive,'\x0d'))
        {
                if(strReceive[0]!= '$') return false;
                else true;
        }
        else return false;

}
//---------------------------------------------------------------------------
bool __fastcall CKeyenceIL030::DisableZero(int nID)
{
        if(!m_bInitOK) return false;
        
        char strSend[100]={0};
        sprintf(strSend,"$ZD%02d\x0d",nID);

        WriteData(strSend);
        char strReceive[100]={0};
        char strValue[15]={0};
        if(ReadData(strReceive,'\x0d'))
        {
                if(strReceive[0]!= '$') return false;
                else true;
        }
        else return false;

}
//---------------------------------------------------------------------------
double __fastcall CKeyenceIL030::GetKg(int nID)
{
        double a=0;
        double x=GetData(nID);

        nTmpData=x;

        if(m_dX[0]==m_dX[1]) a=1;
        else
        {
                a=(m_dY[0]-m_dY[1])/(m_dX[0]-m_dX[1]);
        }
        
        double y=a*x+m_dY[1]-a*m_dX[1];

        //AnsiString stry = FormatFloat("0.00",y);
        //y = stry.ToDouble();

        return y;
}


